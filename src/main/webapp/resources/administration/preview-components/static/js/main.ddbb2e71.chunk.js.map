{"version":3,"sources":["locale/en.js","locale/index.js","utils/CustomEventUtils.js","components/preview/PreviewControlBar.js","components/preview/PreviewControlBarElement.js"],"names":["enLocale","locale","messages","addLocaleData","itLocaleData","createWidgetEvent","el","eventType","payload","widgetEvent","CustomEvent","detail","dispatchEvent","defaultResolution","width","height","conditionAddPx","val","test","PreviewControlBar","appBuilderDomain","userName","resolution","onClickLogout","commentsOpened","onCommentsToggle","screenSizes","onResolutionChange","onShareClicked","useState","commentOpened","setCommentOpened","pick","Object","keys","resoWidth","setResoWidth","resoHeight","setResoHeight","entandoLogo","viewBox","fill","xmlns","d","userMenuTitle","name","sizeSelected","className","href","target","rel","size","id","clsx","onClick","opened","desktop","mobile","tablet","onChange","ev","value","onKeyUp","keyCode","ToggleButtonGroup","type","ToggleButton","disabled","NavDropdown","title","pullRight","MenuItem","defaultProps","defaultScreenSizes","DESKTOP","MOBILE","TABLET","ATTRIBUTES","resolutionWidth","resolutionHeight","sizeDesktop","sizeTablet","sizeMobile","userLogged","PreviewControlBarEvent","LOGOUT_CLICKED","COMMENT_TOGGLE","RESOLUTION_CHANGE","SHARE_CLICKED","window","PreviewControlBarElement","props","onLogoutClicked","onCommentsClicked","onChangeResolution","attribute","oldValue","newValue","values","includes","Error","this","mountPoint","render","setTimeout","reduce","acc","sizeAttr","sizeType","split","coords","getAttribute","toUpperCase","map","trim","length","pickBy","identity","extractScreenSizeAttribute","extractResolutionAttribute","params","ReactDOM","HTMLElement","customElements","get","define"],"mappings":"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","file":"static/js/main.ddbb2e71.chunk.js","sourcesContent":["const enLocale = {\n  locale: 'en',\n  messages: {\n    'preview.controlbar.previewMode': 'Change Preview Mode',\n    'preview.controlbar.option.desktop': 'Desktop',\n    'preview.controlbar.option.tablet': 'Tablet',\n    'preview.controlbar.option.smartphone': 'Smartphone',\n    'preview.controlbar.option.custom': 'Custom',\n    'preview.controlbar.language': 'Language',\n    'preview.controlbar.dashboard': 'Back to Dashboard',\n    'preview.controlbar.myprofile': 'My Profile',\n    'preview.controlbar.logout': 'Logout',\n  },\n};\n\nexport default enLocale;\n","import { addLocaleData } from 'react-intl';\nimport enLocale from 'locale/en';\nimport itLocale from 'locale/it';\n/* ('en' is included by default) */\nimport itLocaleData from 'react-intl/locale-data/it';\n\naddLocaleData(itLocaleData);\n\nexport default enLocale;\n\nexport { itLocale, enLocale };\n","export const createWidgetEvent = (el, eventType) => {\n  return payload => {\n    const widgetEvent = new CustomEvent(eventType, { detail: payload });\n    el.dispatchEvent(widgetEvent);\n  };\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { FormattedMessage } from 'react-intl';\nimport { pick } from 'lodash';\nimport { Icon, Button } from 'patternfly-react';\nimport { ToggleButtonGroup, ToggleButton, NavDropdown, MenuItem } from 'react-bootstrap';\n\nimport 'components/preview/PreviewControlBar.scss';\n\nconst defaultResolution = { width: '100%', height: '100%' };\n\nconst conditionAddPx = val => /%$/.test(val) || /px$/.test(val) ? val : `${val}px`;\n\nconst PreviewControlBar = ({\n  appBuilderDomain,\n  userName,\n  resolution,\n  onClickLogout,\n  commentsOpened,\n  onCommentsToggle,\n  screenSizes,\n  onResolutionChange,\n  onShareClicked,\n}) => {\n  const [commentOpened, setCommentOpened] = useState(commentsOpened);\n\n  const { width, height } = pick({ ...defaultResolution, ...resolution }, Object.keys(defaultResolution));\n  const [resoWidth, setResoWidth] = useState(conditionAddPx(width));\n  const [resoHeight, setResoHeight] = useState(conditionAddPx(height));\n\n  const entandoLogo = (\n    <svg width=\"45\" height=\"45\" viewBox=\"0 0 45 45\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M45 0H0V45H45V0Z\" fill=\"#101820\"/>\n      <path d=\"M17.3055 34.6051H10.3819V27.6943L6.92334 29.3143V38.0636H10.3819H17.2991L17.3055 34.6051Z\" fill=\"#00A0DF\"/>\n      <path d=\"M27.6943 10.395H34.6179V17.3057L38.0765 15.6857V6.9364H34.6179H27.7008L27.6943 10.395Z\" fill=\"#00A0DF\"/>\n      <path d=\"M23.9916 24.4865C28.0801 24.4865 29.5844 22.6029 29.5844 20.3786V18.45C29.5844 16.2322 27.9194 13.8407 24.1459 13.8407H21.1566C19.6908 13.7938 18.266 14.3285 17.1929 15.3281C16.1199 16.3276 15.4857 17.7111 15.4287 19.1765C15.4287 19.755 15.4287 24.0107 15.4287 24.4865C15.4287 27.7715 18.4951 31.1529 22.8987 31.1529C25.276 31.1823 27.575 30.304 29.3273 28.6972L27.3151 25.8943C25.4959 27.135 24.9944 27.6815 23.0209 27.6815C21.0473 27.6815 18.8873 26.5822 18.8873 24.4672L23.9916 24.4865ZM23.9916 17.3122C25.7016 17.3122 26.1001 17.82 26.1001 18.9257V19.6779C26.1001 21.1436 25.4573 21.0215 23.9466 21.0215H18.8873V19.1765C18.8855 18.9184 18.9375 18.6628 19.04 18.4259C19.1424 18.1891 19.2931 17.9762 19.4824 17.8008C19.6717 17.6254 19.8955 17.4914 20.1395 17.4072C20.3834 17.3231 20.6422 17.2907 20.8994 17.3122H23.9916Z\" fill=\"white\"/>\n    </svg>\n  );\n\n  const userMenuTitle = (\n    <span>\n      <Icon name=\"user\" /> { userName }\n    </span>\n  );\n\n  const onCommentsClicked = () => {\n    const opened = !commentOpened;\n    setCommentOpened(opened);\n    onCommentsToggle(opened);\n  };\n\n  const sizeSelected = ({ width, height }) => () => {\n    setResoWidth(conditionAddPx(width));\n    setResoHeight(conditionAddPx(height));\n    onResolutionChange({ width: conditionAddPx(width), height: conditionAddPx(height) });\n  };\n\n  const handleWidthChange = ev => setResoWidth(ev.target.value);\n  const handleHeightChange = ev => setResoHeight(ev.target.value);\n\n  const widthKeyUp = (ev) => {\n    if (ev.keyCode === 13) {\n      const width = conditionAddPx(ev.target.value);\n      setResoWidth(width);\n      onResolutionChange({ width, height: resoHeight });\n    }\n  };\n\n  const heightKeyUp = (ev) => {\n    if (ev.keyCode === 13) {\n      const height = conditionAddPx(ev.target.value);\n      setResoHeight(height);\n      onResolutionChange({ width: resoWidth, height });\n    }\n  };\n\n  return (\n    <div className=\"PreviewControlBar\">\n      <nav>\n        <ul>\n          <li className=\"leftArea\">\n            {entandoLogo}\n            <a href={appBuilderDomain} target=\"_blank\" rel=\"noopener noreferrer\" className=\"PreviewControlBar__dashboard\">\n              <Icon size=\"lg\" name=\"home\" /><FormattedMessage id=\"preview.controlbar.dashboard\" />\n            </a>\n            <Button className={clsx('PreviewControlBar__commentsBtn', commentOpened && 'opened')} onClick={onCommentsClicked}><Icon size=\"lg\" name=\"comments\" /></Button>\n          </li>\n\n          <li className=\"middleArea\">\n            <Button className=\"PreviewControlBar__deviceBtn\" onClick={sizeSelected(screenSizes.desktop)}><Icon size=\"lg\" name=\"desktop\" /></Button>\n            <Button className=\"PreviewControlBar__deviceBtn\" onClick={sizeSelected(screenSizes.mobile)}><Icon size=\"lg\" name=\"mobile\" /></Button>\n            <Button className=\"PreviewControlBar__deviceBtn\" onClick={sizeSelected(screenSizes.tablet)}><Icon size=\"lg\" name=\"tablet\" /></Button>\n            <input className=\"custom-width\" onChange={handleWidthChange} value={resoWidth} onKeyUp={widthKeyUp} />\n            x\n            <input className=\"custom-height\" onChange={handleHeightChange} value={resoHeight} onKeyUp={heightKeyUp} />\n          </li>\n\n          <li className=\"rightArea\">\n            <ToggleButtonGroup type=\"radio\" name=\"pageType\" className=\"PreviewControlBar__pageType\">\n                <ToggleButton value=\"preview\">Preview</ToggleButton>\n                <ToggleButton disabled value=\"published\">Published</ToggleButton>\n            </ToggleButtonGroup>\n          </li>\n\n          <li className=\"rightArea\">\n            <Button className=\"PreviewControlBar__share\" onClick={onShareClicked}><Icon name=\"user-plus\" size=\"lg\" /> Share</Button>\n          </li>\n\n          <NavDropdown id=\"previewControlBarUserMenu\" className=\"PreviewControlBar__userDropdown\" title={userMenuTitle} pullRight>\n            <MenuItem href=\"#\"><Icon name=\"user\" /> <FormattedMessage id=\"preview.controlbar.myprofile\" /></MenuItem>\n            <MenuItem onClick={onClickLogout}><Icon name=\"sign-out\" /> <FormattedMessage id=\"preview.controlbar.logout\" /></MenuItem>\n          </NavDropdown>\n          \n        </ul>\n      </nav>\n    </div>\n  );\n}\n\nconst SizePropType = PropTypes.shape({\n  width: PropTypes.string,\n  height: PropTypes.string,\n});\n\nPreviewControlBar.propTypes = {\n  appBuilderDomain: PropTypes.string,\n  userName: PropTypes.string,\n  onClickLogout: PropTypes.func,\n  screenSizes: PropTypes.shape({\n    desktop: SizePropType,\n    mobile: SizePropType,\n    tablet: SizePropType,\n  }).isRequired,\n  resolution: SizePropType,\n  commentsOpened: PropTypes.bool,\n  onCommentsToggle: PropTypes.func,\n  onShareClicked: PropTypes.func,\n  onResolutionChange: PropTypes.func,\n};\n\nPreviewControlBar.defaultProps = {\n  appBuilderDomain: '//',\n  userName: 'user',\n  onClickLogout: () => {},\n  resolution: {},\n  commentsOpened: false,\n  onCommentsToggle: () => {},\n  onResolutionChange: () => {},\n  onShareClicked: () => {},\n};\n\nexport default PreviewControlBar;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { pickBy, identity } from 'lodash';\nimport { IntlProvider } from 'react-intl';\nimport { enLocale } from 'locale';\n\nimport { createWidgetEvent } from 'utils/CustomEventUtils';\nimport PreviewControlBar from 'components/preview/PreviewControlBar';\n\nexport const defaultScreenSizes = {\n  DESKTOP: '100%x100%',\n  MOBILE: '360x640',\n  TABLET: '768x1024',\n};\n\nconst ATTRIBUTES = {\n  appBuilderDomain: 'app-builder-domain',\n  resolutionWidth: 'resolution-width',\n  resolutionHeight: 'resolution-height',\n  commentsOpened: 'comments-opened',\n  sizeDesktop: 'size-desktop',\n  sizeTablet: 'size-tablet',\n  sizeMobile: 'size-mobile',\n  userLogged: 'user-logged',\n};\n\nexport const PreviewControlBarEvent = {\n  LOGOUT_CLICKED: 'preview-control-bar/on-logout-clicked',\n  COMMENT_TOGGLE: 'preview-control-bar/on-comment-toggled',\n  RESOLUTION_CHANGE: 'preview-control-bar/on-resolution-change',\n  SHARE_CLICKED: 'preview-control-bar/on-share-clicked',\n};\n\nwindow.PreviewControlBarEvent = PreviewControlBarEvent;\n\nclass PreviewControlBarElement extends HTMLElement {\n  constructor(props) {\n    super(props);\n\n    this.onLogoutClicked = createWidgetEvent(this, PreviewControlBarEvent.LOGOUT_CLICKED);\n    this.onCommentsClicked = createWidgetEvent(this, PreviewControlBarEvent.COMMENT_TOGGLE);\n    this.onChangeResolution = createWidgetEvent(this, PreviewControlBarEvent.RESOLUTION_CHANGE);\n    this.onShareClicked = createWidgetEvent(this, PreviewControlBarEvent.SHARE_CLICKED);\n  }\n\n  static get observedAttributes() {\n    return Object.values(ATTRIBUTES);\n  }\n\n  attributeChangedCallback(attribute, oldValue, newValue) {\n    if (!Object.values(ATTRIBUTES).includes(attribute)) {\n      throw new Error(`Untracked changed attribute: ${attribute}`);\n    }\n    if (this.mountPoint && newValue !== oldValue) {\n      this.render();\n    }\n  }\n\n  connectedCallback() {\n    setTimeout(() => this.render(), 500);\n  }\n\n  extractScreenSizeAttribute() {\n    return [ATTRIBUTES.sizeDesktop, ATTRIBUTES.sizeMobile, ATTRIBUTES.sizeTablet].reduce((acc, sizeAttr) => {\n      const sizeType = sizeAttr.split('-')[1];\n      const sizeValue = this.getAttribute(sizeAttr) || defaultScreenSizes[sizeType.toUpperCase()];\n      const coords = sizeValue.split('x').map(val => val.trim());\n      if (coords.length) {\n        const [width, height] = coords;\n        return {\n          ...acc,\n          [sizeType]: { width, height },\n        };\n      }\n      return {\n        ...acc,\n        [sizeType]: { width: '100%', height: '100%' },\n      };\n    }, {});\n  }\n\n  extractResolutionAttribute() {\n    const width = this.getAttribute(ATTRIBUTES.resolutionWidth);\n    const height = this.getAttribute(ATTRIBUTES.resolutionHeight);\n    \n    return width || height ? pickBy({ width, height }, identity) : null;\n  }\n\n  render() {\n    const screenSizes = this.extractScreenSizeAttribute();\n    const resolution = this.extractResolutionAttribute();\n\n    const params = pickBy({\n      appBuilderDomain: this.getAttribute(ATTRIBUTES.appBuilderDomain),\n      commentsOpened: !!this.getAttribute(ATTRIBUTES.commentsOpened),\n      screenSizes,\n      resolution,\n      userName: this.getAttribute(ATTRIBUTES.userLogged),\n      onClickLogout: this.onLogoutClicked,\n      onCommentsToggle: this.onCommentsClicked,\n      onResolutionChange: this.onChangeResolution,\n      onShareClicked: this.onShareClicked,\n    }, identity);\n\n    ReactDOM.render(\n      <IntlProvider locale=\"en\" messages={enLocale.messages}>\n        <PreviewControlBar {...params} />\n      </IntlProvider>,\n      this,\n    );\n  }\n}\n\nif (!customElements.get('preview-control-bar')) {\n  customElements.define('preview-control-bar', PreviewControlBarElement);\n}\n\nexport default PreviewControlBarElement;\n"],"sourceRoot":""}